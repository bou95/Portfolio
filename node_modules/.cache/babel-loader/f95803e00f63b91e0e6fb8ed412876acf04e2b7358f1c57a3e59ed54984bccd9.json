{"ast":null,"code":"// stepper is used a lot. Saves allocation to return the same array wrapper.\n// This is fine and danger-free against mutations because the callsite\n// immediately destructures it and gets the numbers inside without passing the\n\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = stepper;\nvar reusedTuple = [0, 0];\nfunction stepper(secondPerFrame, x, v, destX, k, b, precision) {\n  // Spring stiffness, in kg / s^2\n\n  // for animations, destX is really spring length (spring at rest). initial\n  // position is considered as the stretched/compressed position of a spring\n  var Fspring = -k * (x - destX);\n\n  // Damping, in kg / s\n  var Fdamper = -b * v;\n\n  // usually we put mass here, but for animation purposes, specifying mass is a\n  // bit redundant. you could simply adjust k and b accordingly\n  // let a = (Fspring + Fdamper) / mass;\n  var a = Fspring + Fdamper;\n  var newV = v + a * secondPerFrame;\n  var newX = x + newV * secondPerFrame;\n  if (Math.abs(newV) < precision && Math.abs(newX - destX) < precision) {\n    reusedTuple[0] = destX;\n    reusedTuple[1] = 0;\n    return reusedTuple;\n  }\n  reusedTuple[0] = newX;\n  reusedTuple[1] = newV;\n  return reusedTuple;\n}\nmodule.exports = exports[\"default\"];\n// array reference around.","map":{"version":3,"names":["exports","__esModule","stepper","reusedTuple","secondPerFrame","x","v","destX","k","b","precision","Fspring","Fdamper","a","newV","newX","Math","abs","module"],"sources":["C:/Users/beben/OneDrive/Documents/GitHub/Portfolio/node_modules/react-text-loop/node_modules/react-motion/lib/stepper.js"],"sourcesContent":["\r\n\r\n// stepper is used a lot. Saves allocation to return the same array wrapper.\r\n// This is fine and danger-free against mutations because the callsite\r\n// immediately destructures it and gets the numbers inside without passing the\r\n\"use strict\";\r\n\r\nexports.__esModule = true;\r\nexports[\"default\"] = stepper;\r\n\r\nvar reusedTuple = [0, 0];\r\n\r\nfunction stepper(secondPerFrame, x, v, destX, k, b, precision) {\r\n  // Spring stiffness, in kg / s^2\r\n\r\n  // for animations, destX is really spring length (spring at rest). initial\r\n  // position is considered as the stretched/compressed position of a spring\r\n  var Fspring = -k * (x - destX);\r\n\r\n  // Damping, in kg / s\r\n  var Fdamper = -b * v;\r\n\r\n  // usually we put mass here, but for animation purposes, specifying mass is a\r\n  // bit redundant. you could simply adjust k and b accordingly\r\n  // let a = (Fspring + Fdamper) / mass;\r\n  var a = Fspring + Fdamper;\r\n\r\n  var newV = v + a * secondPerFrame;\r\n  var newX = x + newV * secondPerFrame;\r\n\r\n  if (Math.abs(newV) < precision && Math.abs(newX - destX) < precision) {\r\n    reusedTuple[0] = destX;\r\n    reusedTuple[1] = 0;\r\n    return reusedTuple;\r\n  }\r\n\r\n  reusedTuple[0] = newX;\r\n  reusedTuple[1] = newV;\r\n  return reusedTuple;\r\n}\r\n\r\nmodule.exports = exports[\"default\"];\r\n// array reference around."],"mappings":"AAEA;AACA;AACA;AACA,YAAY;;AAEZA,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAAC,SAAS,CAAC,GAAGE,OAAO;AAE5B,IAAIC,WAAW,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAExB,SAASD,OAAOA,CAACE,cAAc,EAAEC,CAAC,EAAEC,CAAC,EAAEC,KAAK,EAAEC,CAAC,EAAEC,CAAC,EAAEC,SAAS,EAAE;EAC7D;;EAEA;EACA;EACA,IAAIC,OAAO,GAAG,CAACH,CAAC,IAAIH,CAAC,GAAGE,KAAK,CAAC;;EAE9B;EACA,IAAIK,OAAO,GAAG,CAACH,CAAC,GAAGH,CAAC;;EAEpB;EACA;EACA;EACA,IAAIO,CAAC,GAAGF,OAAO,GAAGC,OAAO;EAEzB,IAAIE,IAAI,GAAGR,CAAC,GAAGO,CAAC,GAAGT,cAAc;EACjC,IAAIW,IAAI,GAAGV,CAAC,GAAGS,IAAI,GAAGV,cAAc;EAEpC,IAAIY,IAAI,CAACC,GAAG,CAACH,IAAI,CAAC,GAAGJ,SAAS,IAAIM,IAAI,CAACC,GAAG,CAACF,IAAI,GAAGR,KAAK,CAAC,GAAGG,SAAS,EAAE;IACpEP,WAAW,CAAC,CAAC,CAAC,GAAGI,KAAK;IACtBJ,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC;IAClB,OAAOA,WAAW;EACpB;EAEAA,WAAW,CAAC,CAAC,CAAC,GAAGY,IAAI;EACrBZ,WAAW,CAAC,CAAC,CAAC,GAAGW,IAAI;EACrB,OAAOX,WAAW;AACpB;AAEAe,MAAM,CAAClB,OAAO,GAAGA,OAAO,CAAC,SAAS,CAAC;AACnC"},"metadata":{},"sourceType":"script","externalDependencies":[]}