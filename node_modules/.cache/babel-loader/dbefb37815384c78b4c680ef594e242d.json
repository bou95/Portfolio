{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\beben\\\\OneDrive\\\\Documents\\\\GitHub\\\\Portfolio\\\\src\\\\components\\\\Contact.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport emailjs from '@emailjs/browser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Contact = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm(); // const onSubmit = (data, e) => {\n  //   e.target.reset();\n  //   console.log(\"Message submited: \" + JSON.stringify(data));\n  // };\n\n  const form = useRef();\n\n  const sendEmail = e => {\n    e.preventDefault();\n    emailjs.sendForm('service_quqlqqg', 'template_e5bdahn', form.current, 'VnuebFE-RHbLGu1qE').then(result => {\n      console.log(result.text);\n    }, error => {\n      console.log(error.text);\n    });\n    e.target.reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      ref: form,\n      onSubmit: sendEmail,\n      className: \"contact_form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"first_row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"name\", {\n            required: true\n          }),\n          type: \"text\",\n          placeholder: \"Name *\",\n          name: \"user_name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 19\n        }, this), errors.name && errors.name.type === \"required\" && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"invalid-feedback\",\n          children: \"Name is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"second\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"email\", {\n              required: \"Email is Required\",\n              pattern: {\n                value: /\\S+@\\S+\\.\\S+/,\n                message: \"Entered value does not match email format\"\n              }\n            }, {\n              required: true\n            }),\n            type: \"email\",\n            placeholder: \"Email *\",\n            name: \"user_email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 23\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"invalid-feedback\",\n            children: errors.email.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"third\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", { ...register(\"message\", {\n            required: true\n          }),\n          placeholder: \"Message *\",\n          name: \"message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this), errors.message && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"invalid-feedback\",\n          children: \"Message is required.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"beny_tm_button\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"color\",\n          value: \"Send\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"first\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"second\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n\n_s(Contact, \"a6pGL5yO7470ttDj6mm40P8c5Vg=\", false, function () {\n  return [useForm];\n});\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["C:/Users/beben/OneDrive/Documents/GitHub/Portfolio/src/components/Contact.jsx"],"names":["React","useRef","useForm","emailjs","Contact","register","handleSubmit","formState","errors","form","sendEmail","e","preventDefault","sendForm","current","then","result","console","log","text","error","target","reset","required","name","type","pattern","value","message","email"],"mappings":"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","sourcesContent":["import React, {useRef} from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport emailjs from '@emailjs/browser'\r\n\r\nconst Contact = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  // const onSubmit = (data, e) => {\r\n  //   e.target.reset();\r\n  //   console.log(\"Message submited: \" + JSON.stringify(data));\r\n  // };\r\n\r\n\r\n  const form = useRef();\r\n    const sendEmail = (e) => {\r\n        e.preventDefault();\r\n\r\n        emailjs.sendForm('service_quqlqqg', 'template_e5bdahn', form.current, 'VnuebFE-RHbLGu1qE')\r\n            .then((result) => {\r\n                console.log(result.text);\r\n            }, (error) => {\r\n                console.log(error.text);\r\n            });\r\n        \r\n        e.target.reset();\r\n    };\r\n\r\n  return (\r\n      <>\r\n\r\n\r\n          {/*<form className=\"contact_form\"*/}\r\n          {/*      // onSubmit={handleSubmit(onSubmit)}*/}\r\n          {/*      onSubmit={sendEmail}*/}\r\n          {/*>*/}\r\n          <form ref={form} onSubmit={sendEmail} className=\"contact_form\">\r\n              <div className=\"first_row\">\r\n                  <input {...register(\"name\", {required: true})}\r\n                         type=\"text\"\r\n                         placeholder=\"Name *\"\r\n                         name=\"user_name\"\r\n                  />\r\n\r\n                  {errors.name && errors.name.type === \"required\" && (\r\n                      <span className=\"invalid-feedback\">Name is required</span>\r\n                  )}\r\n              </div>\r\n              <div className=\"second\">\r\n                  <div className=\"left\">\r\n                      <input\r\n                          {...register(\r\n                              \"email\",\r\n                              {\r\n                                  required: \"Email is Required\",\r\n                                  pattern: {\r\n                                      value: /\\S+@\\S+\\.\\S+/,\r\n                                      message: \"Entered value does not match email format\",\r\n                                  },\r\n                              },\r\n                              {required: true}\r\n                          )\r\n                          }\r\n\r\n                          type=\"email\"\r\n                          placeholder=\"Email *\"\r\n                          name=\"user_email\"\r\n                      />\r\n                      {errors.email && (\r\n                          <span className=\"invalid-feedback\">{errors.email.message}</span>\r\n                      )}\r\n                  </div>\r\n              </div>\r\n                  <div className=\"third\">\r\n              <textarea\r\n                  {...register(\"message\", {required: true})}\r\n                  placeholder=\"Message *\"\r\n                  name=\"message\"\r\n              ></textarea>\r\n                      {errors.message && (\r\n                          <span className=\"invalid-feedback\">Message is required.</span>\r\n                      )}\r\n                  </div>\r\n                  <div className=\"beny_tm_button\">\r\n                      <button type=\"submit\" className=\"color\" value=\"Send\">\r\n                    <span className=\"wrapper\">\r\n                      <span className=\"first\">Submit</span>\r\n                      <span className=\"second\">Submit</span>\r\n                    </span>\r\n                      </button>\r\n                  </div>\r\n          </form>\r\n\r\n\r\n\r\n          {/*    <div className=\"right\">*/}\r\n          {/*      <input*/}\r\n          {/*          //     /!*{...register(\"subject\", { required: true })}*!/*/}\r\n          {/*        placeholder=\"Subject *\"*/}\r\n          {/*      />*/}\r\n          {/*      {errors.subject && (*/}\r\n          {/*        <span className=\"invalid-feedback\">Subject is required.</span>*/}\r\n          {/*      )}*/}\r\n          {/*    </div>*/}\r\n\r\n\r\n\r\n      </>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n"]},"metadata":{},"sourceType":"module"}