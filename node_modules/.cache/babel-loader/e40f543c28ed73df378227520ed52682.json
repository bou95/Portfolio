{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\beben\\\\OneDrive\\\\Documents\\\\GitHub\\\\Portfolio\\\\src\\\\components\\\\Contact.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport emailjs from '@emailjs/browser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Contact = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const form = useRef();\n\n  const onSubmit = (data, e) => {\n    e.target.reset();\n    console.log(\"Message submited: \" + JSON.stringify(data));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"contact_form\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"first_row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"name\", {\n            required: true\n          }),\n          type: \"text\",\n          placeholder: \"Name *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), errors.name && errors.name.type === \"required\" && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"invalid-feedback\",\n          children: \"Name is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"second\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"email\", {\n              required: \"Email is Required\",\n              pattern: {\n                value: /\\S+@\\S+\\.\\S+/,\n                message: \"Entered value does not match email format\"\n              }\n            }, {\n              required: true\n            }),\n            type: \"email\",\n            placeholder: \"Email *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"invalid-feedback\",\n            children: errors.email.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"subject\", {\n              required: true\n            }),\n            placeholder: \"Subject *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), errors.subject && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"invalid-feedback\",\n            children: \"Subject is required.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"third\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", { ...register(\"message\", {\n            required: true\n          }),\n          placeholder: \"Message *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), errors.message && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"invalid-feedback\",\n          children: \"Message is required.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"beny_tm_button\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"color\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"first\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"second\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}; // const sendEmail = (e) => {\n//     e.preventDefault();\n//\n//     emailjs.sendForm('YOUR_SERVICE_ID', 'YOUR_TEMPLATE_ID', form.current, 'YOUR_PUBLIC_KEY')\n//         .then((result) => {\n//             console.log(result.text);\n//         }, (error) => {\n//             console.log(error.text);\n//         });\n// };\n// return (\n//     <form ref={form} onSubmit={sendEmail}>\n//         <label>Name</label>\n//         <input type=\"text\" name=\"user_name\" />\n//         <label>Email</label>\n//         <input type=\"email\" name=\"user_email\" />\n//         <label>Message</label>\n//         <textarea name=\"message\" />\n//         <input type=\"submit\" value=\"Send\" />\n//     </form>\n// );\n\n\n_s(Contact, \"a6pGL5yO7470ttDj6mm40P8c5Vg=\", false, function () {\n  return [useForm];\n});\n\n_c = Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["C:/Users/beben/OneDrive/Documents/GitHub/Portfolio/src/components/Contact.jsx"],"names":["React","useRef","useForm","emailjs","Contact","register","handleSubmit","formState","errors","form","onSubmit","data","e","target","reset","console","log","JSON","stringify","required","name","type","pattern","value","message","email","subject"],"mappings":"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","sourcesContent":["import React, { useRef }  from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport emailjs from '@emailjs/browser';\r\n\r\nconst Contact = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n    const form = useRef();\r\n\r\n\r\n    const onSubmit = (data, e) => {\r\n    e.target.reset();\r\n    console.log(\"Message submited: \" + JSON.stringify(data));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"contact_form\" onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"first_row\">\r\n          <input\r\n            {...register(\"name\", { required: true })}\r\n            type=\"text\"\r\n            placeholder=\"Name *\"\r\n          />\r\n          {errors.name && errors.name.type === \"required\" && (\r\n            <span className=\"invalid-feedback\">Name is required</span>\r\n          )}\r\n        </div>\r\n        {/* End .first_row */}\r\n\r\n        <div className=\"second\">\r\n          <div className=\"left\">\r\n            <input\r\n              {...register(\r\n                \"email\",\r\n                {\r\n                  required: \"Email is Required\",\r\n                  pattern: {\r\n                    value: /\\S+@\\S+\\.\\S+/,\r\n                    message: \"Entered value does not match email format\",\r\n                  },\r\n                },\r\n                { required: true }\r\n              )}\r\n              type=\"email\"\r\n              placeholder=\"Email *\"\r\n            />\r\n            {errors.email && (\r\n              <span className=\"invalid-feedback\">{errors.email.message}</span>\r\n            )}\r\n          </div>\r\n          <div className=\"right\">\r\n            <input\r\n              {...register(\"subject\", { required: true })}\r\n              placeholder=\"Subject *\"\r\n            />\r\n            {errors.subject && (\r\n              <span className=\"invalid-feedback\">Subject is required.</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* End .second */}\r\n\r\n        <div className=\"third\">\r\n          <textarea\r\n            {...register(\"message\", { required: true })}\r\n            placeholder=\"Message *\"\r\n          ></textarea>\r\n          {errors.message && (\r\n            <span className=\"invalid-feedback\">Message is required.</span>\r\n          )}\r\n        </div>\r\n        {/* End .third */}\r\n\r\n        <div className=\"beny_tm_button\">\r\n          <button type=\"submit\" className=\"color\">\r\n            <span className=\"wrapper\">\r\n              <span className=\"first\">Submit</span>\r\n              <span className=\"second\">Submit</span>\r\n            </span>\r\n          </button>\r\n        </div>\r\n        {/* End tokyo_tm_button */}\r\n      </form>\r\n      {/* End contact */}\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n    // const sendEmail = (e) => {\r\n    //     e.preventDefault();\r\n    //\r\n    //     emailjs.sendForm('YOUR_SERVICE_ID', 'YOUR_TEMPLATE_ID', form.current, 'YOUR_PUBLIC_KEY')\r\n    //         .then((result) => {\r\n    //             console.log(result.text);\r\n    //         }, (error) => {\r\n    //             console.log(error.text);\r\n    //         });\r\n    // };\r\n\r\n    // return (\r\n    //     <form ref={form} onSubmit={sendEmail}>\r\n    //         <label>Name</label>\r\n    //         <input type=\"text\" name=\"user_name\" />\r\n    //         <label>Email</label>\r\n    //         <input type=\"email\" name=\"user_email\" />\r\n    //         <label>Message</label>\r\n    //         <textarea name=\"message\" />\r\n    //         <input type=\"submit\" value=\"Send\" />\r\n    //     </form>\r\n    // );\r\n"]},"metadata":{},"sourceType":"module"}